pipeline{
    agent any

    tools {
        nodejs 'NODE20'
        jdk 'JDK17'
    }
    stages{
        stage("Fetch code"){
            steps{
                git branch: 'develop', url: 'https://github.com/Salim255/intimacy-back-v2.git'
            }
            post{
                always{
                    echo "========always========"
                }
                success{
                    echo "========A executed successfully========"
                }
                failure{
                    echo "========A execution failed========"
                }
            }
        }
        stage("Install Dependencies"){
            steps{
                sh 'npm install'       // <--- This installs dependencies
            }
            post{
                always{
                    echo "========always========"
                }
                success{
                    echo "========B executed successfully========"
                }
                failure{
                    echo "========B execution failed========"
                }
            }
        }

        stage("Checkstyle Analysis"){
            steps{
                catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                    sh 'npm run lint:report'
                }
              
            }
            post{
                always {
                    archiveArtifacts artifacts: 'eslint-report.json', fingerprint: true
                }
                success{
                    echo "========checkstyle executed successfully========"
                }
                failure{
                    echo "========checkstyle execution failed========"
                }
            }
        }
        stage('SonarQube Analysis') {
            environment {
                SONARQUBE_SCANNER_HOME = tool 'sonar7.1' // Ensure you have configured SonarQube scanner in Jenkins
            }
            steps {
                withSonarQubeEnv('sonarserver') { // Ensure you have configured SonarQube server in Jenkins
                    sh '''
                        ${SONARQUBE_SCANNER_HOME}/bin/sonar-scanner \
                        -Dsonar.projectKey=intimacy-back-v2 \
                        -Dsonar.projectName="Intimacy Backend" \
                        -D.sonar.projectVersion=1.0 \
                        -Dsonar.sources=src \
                        -Dsonar.exclusions=src/infrastructure/**/* \
                        -D.sonar.sourceEncoding=UTF-8 \
                        -Dsonar.eslint.reportPaths=eslint-report.json \
                        -D.sonar.javascript.lcov.reportPaths=coverage/lcov.info
                    '''
                    // Upload the ESLint report to SonarQube server
                    echo "========SonarQube Analysis executed successfully========"
                }
            }
        }
        stage("Unit Tests"){
            steps{
                catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                   sh 'npm run test:cov'
                }
               
            }
            post{
    
                success{
                    echo "========Unit Tests executed successfully========"
                }
                failure{
                    echo "========B execution failed========"
                }
            }
        }
        stage("Build"){
            steps{
                sh 'npm run build'
            }
            post{
                always{
                    echo "========always========"
                }
                success{
                    echo "======== Build executed successfully========"
                    echo "========Archiving artifact======="
                    archiveArtifacts artifacts: 'dist/**', fingerprint: true
                }
                failure{
                    echo "========Build execution failed========"
                }
            }
        }
    }
}